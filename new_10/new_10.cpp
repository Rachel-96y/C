/*
1、int strlen (char* str)				
返回值是字符串s的长度。不包括结束符'/0'。				
				
2、char* strcpy (char* dest, char* src);				
复制字符串src到dest中。返回指针为dest的值。				
				
3、char* strcat (char* dest, char* src);				
将字符串src添加到dest尾部。返回指针为dest的值。				
			
4、int strcmp (char* s1, char* s2);一样返回0  不一样返回1
*/


/*
本节练习：						
						
模拟实现CE的数据搜索功能：						
						
	这一堆数据中存储了角色的名字信息(WOW)，请列出角色名的内存地址.					
						
	0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x07,0x09,					
	0x00,0x20,0x10,0x03,0x03,0x0C,0x00,0x00,0x44,0x00,					
	0x00,0x33,0x00,0x47,0x0C,0x0E,0x00,0x0D,0x00,0x11,					
	0x00,0x00,0x00,0x02,0x64,0x00,0x00,0x00,0x7F,0x00,					
	0x00,0x00,0x64,0x10,0x00,0x00,0x00,0x00,0x00,0x00,					
	0x00,0x00,0x02,0x00,0x74,0x0F,0x41,0x00,0x00,0x00,					
	0x01,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0A,0x00,					
	0x00,0x02,0x57,0x4F,0x57,0x00,0x06,0x08,0x00,0x00,					
	0x00,0x00,0x00,0x64,0x00,0x0F,0x00,0x00,0x0D,0x00,					
	0x00,0x00,0x23,0x00,0x00,0x64,0x00,0x00,0x64,0x00					
						
						
1、编写函数，返回角色名字信息的地址，如果没有返回0						
						
char* FindRoleNameAddr(char* pData,char* pRoleName)						
						
2、编写函数，遍历上面数据中所有角色名。						
						
						
3、int strcmp (char* s1, char* s2);一样返回0  不一样返回1		

*/




#include "stdafx.h"

// 声明所需要使用的函数
int strlen (char* str);
char* strcpy (char* dest, char* src);
char* strcat (char* dest, char* src);
int strcmp (char* strA, char* strB);
char* FindRoleNameAddr (char* pData,char* pRoleName);

char strArr[] = "Japan";  // 字符串的值在全局变量区
char strArrAno[] = "ABC"; // 
char strRoleName[] = "WOW";  // 模拟的要查找的角色名字
char data[100] = 
{
	// 模拟内存地址,长度为100个字节
	0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x07,0x09,					
	0x00,0x20,0x10,0x03,0x03,0x0C,0x00,0x00,0x44,0x00,					
	0x00,0x33,0x00,0x47,0x0C,0x0E,0x00,0x0D,0x00,0x11,					
	0x00,0x00,0x00,0x02,0x64,0x00,0x00,0x00,0x7F,0x00,					
	0x00,0x00,0x64,0x10,0x00,0x00,0x00,0x00,0x00,0x00,					
	0x00,0x00,0x02,0x00,0x74,0x0F,0x41,0x00,0x00,0x00,					
	0x01,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0A,0x00,					
	0x00,0x02,0x57,0x4F,0x57,0x00,0x06,0x08,0x00,0x00,					
	0x00,0x00,0x00,0x64,0x00,0x0F,0x00,0x00,0x0D,0x00,					
	0x00,0x00,0x23,0x00,0x00,0x64,0x00,0x00,0x64,0x00,	
};

int main (int argc, char* argv[])
{
	return 0;
}

int strlen (char* str)
{
	// 返回值是字符串s的长度。不包括结束符'/0'。
	int sum = 0;
	while (*str++ != 0x00? ++sum: 0);
	return sum;
}

char* strcpy (char* dest, char* src)
{
	// 复制字符串src到dest中。返回指针为dest的值。
	char* result = dest;
	while (*dest++ = *src++);
	return result;
}

char* strcat (char* dest, char* src)
{
	// 将字符串src添加到dest尾部。返回指针为dest的值。
	char* result = dest;
	while (*++dest);
	while (*dest++ = *src++);
	return result;
}

int strcmp (char* pStrA, char* pStrB)
{
	// 判断两个字符串是否完全相等 一样返回0  不一样返回1
	while (*pStrA++ == *pStrB++? 1: 0)
	{
		if (*(pStrA - 1) == 0 && *(pStrB - 1) == 0)
			return 0;
	}
	return 1;
}

char* FindRoleNameAddr (char* pData,char* pRoleName)
{
	// 编写函数，返回角色名字信息的地址，如果没有返回0。
	int roleNameLength = strlen (pRoleName);
	for (int i = 0; i < 100 - roleNameLength + 1; i++)
	{
		if (!strcmp(pData++, pRoleName))
			return pData - 1;
	}
	return 0;
}

char* FindRoleNameAddrEx (char* pData)
{
	// 编写函数，遍历上面数据中所有角色名字。
	// 返回值是存放了所有名字的列表首地址。
	// 此函数暂时无法完成
	return 0;
}
