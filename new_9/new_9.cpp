#include "stdafx.h"

/*				
	模拟实现CE的数据搜索功能：					
		这一堆数据中存储了角色的血值信息，假设血值的类型为int类型，值为100(10进制)					
		请列出所有可能的值以及该值对应的地址.				
*/

char data[100] =
{	
	// 模拟内存地址
	0x00,0x64,0x02,0x03,0x04,0x64,0x06,0x07,0x07,0x09,					
	0x00,0x20,0x10,0x03,0x03,0x0C,0x00,0x00,0x44,0x00,					
	0x00,0x33,0x00,0x47,0x0C,0x0E,0x00,0x0D,0x00,0x11,
	0x00,0x00,0x00,0x02,0x64,0x00,0x00,0x00,0x7F,0x00,					
	0x00,0x00,0x64,0x10,0x00,0x00,0x00,0x00,0x00,0x00,					
	0x00,0x00,0x02,0x00,0x74,0x0F,0x41,0x00,0x00,0x00,					
	0x01,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x0A,0x00,					
	0x00,0x02,0x74,0x0F,0x41,0x00,0x06,0x08,0x00,0x00,					
	0x00,0x00,0x00,0x64,0x00,0x0F,0x00,0x00,0x0D,0x00,					
	0x00,0x00,0x23,0x00,0x00,0x00,0x00,0x00,0x64,0x00,
};

void __stdcall FindBloodAdress(int address)
{
	// 模拟读取内存地址,返回需要查找的值的地址
	char* pData = &data[0];  // 获取数组首地址并存放进char*类型的变量中
	printf("数据首地址为: 0x%x\n", pData);
	for (int i = 0; i < 97; i++)
	{
		int* pGetData = (int*)(pData + i);  // 将char*类型转换为int*类型
		if (*pGetData == address)
			printf("可能的血值地址是: 0x%x\n", pGetData);
	}
}			

int main(int argc, char* argv[])
{
	FindBloodAdress(0x64);
	return 0;
}